<controls:MetroWindow x:Class="PasswordSafe.Windows.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:converters="http://metro.mahapps.com/winfx/xaml/shared"
                      xmlns:customControls="clr-namespace:PasswordSafe.GlobalClasses.CustomControls"
                      xmlns:local="clr-namespace:PasswordSafe"
                      xmlns:metro="clr-namespace:MahApps.Metro;assembly=MahApps.Metro"
                      xmlns:properties="clr-namespace:PasswordSafe.Properties" Title="Password Safe" Width="Auto"
                      Height="Auto" MinWidth="400" MinHeight="300" Closing="MetroWindowClosing"
                      FontFamily="{DynamicResource MainFont}"
                      FontSize="{DynamicResource MainFontSize}"
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      KeyDown="GlobalHotkeys"
                      NonActiveWindowTitleBrush="{DynamicResource AccentColorBrush2}"
                      PreviewKeyDown="GlobalHotkeys2" ResizeMode="CanResize" WindowStartupLocation="CenterScreen">
    <controls:MetroWindow.Resources>
        <!--  Region Menu Bar  -->
        <Style x:Key="TopLevelMenu" TargetType="MenuItem">
            <Setter Property="Width" Value="Auto" />
            <Setter Property="Height" Value="23" />
            <Setter Property="Padding" Value="10,0,10,0" />
            <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
        </Style>
        <Style x:Key="SubMenu" TargetType="MenuItem">
            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--  EndRegion  -->
        <!--  Region Folders  -->
        <Style x:Key="DropDownButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="Border">
                            <Grid>
                                <Ellipse x:Name="Circle" Width="20" Height="20" HorizontalAlignment="Center" VerticalAlignment="Center"
                                         Fill="Transparent" />
                                <Path x:Name="Sign" Width="12" Height="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Data="M 9.0625 6.5625 L 3.5 1 M 9.0625 5.4375 L 3.5 11" RenderTransformOrigin="0.5,0.5"
                                      Stroke="{TemplateBinding Foreground}"
                                      StrokeThickness="1.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="0" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Sign"
                                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="90" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="Sign"
                                                             Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ContextMenu x:Key="FolderExpanderContextMenu">
            <MenuItem Click="CreateNewFolderOnClick" Header="New Folder" />
            <MenuItem Click="RenameFolderOnClick" Header="Rename" />
        </ContextMenu>
        <Style x:Key="DropDownFolder" TargetType="customControls:FolderExpander">
            <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
            <Setter Property="MinHeight" Value="26" />
            <Setter Property="AllowDrop" Value="True" />
            <Setter Property="IsHighlighted" Value="False" />
            <Setter Property="DisplayTopBlackBar" Value="False" />
            <Setter Property="DisplayBottomBlackBar" Value="False" />
            <EventSetter Event="MouseMove" Handler="StartDraggingOfFolder" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="customControls:FolderExpander">
                        <DockPanel>
                            <Grid DockPanel.Dock="Top" DragLeave="DragLeaveFolder" DragOver="DragOverFolder" Drop="DropOntoFolder"
                                  MouseEnter="HighlightFolderWhenMouseEnters" MouseLeave="UnhighlightFolderWhenMouseLeaves">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding Indentation, RelativeSource={RelativeSource TemplatedParent}}" />
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Grid.ColumnSpan="3"
                                           MinHeight="{TemplateBinding MinHeight}"
                                           Fill="{DynamicResource WhiteBrush}" />
                                <Rectangle Name="Background" Grid.Column="0" Grid.ColumnSpan="3"
                                           MinHeight="{TemplateBinding MinHeight}"
                                           ContextMenu="{StaticResource FolderExpanderContextMenu}"
                                           ContextMenuOpening="ModifyFolderLabelContextMenuOnOpening"
                                           Fill="{TemplateBinding Background}"
                                           MouseLeftButtonDown="FilterByFolderOnDoubleClick" />
                                <Rectangle Name="TopBlackBar" Grid.Column="0" Grid.ColumnSpan="3" Height="2" HorizontalAlignment="Stretch"
                                           VerticalAlignment="Top"
                                           Fill="{DynamicResource BlackBrush}" />
                                <Rectangle Name="BottomBlackBar" Grid.Column="0" Grid.ColumnSpan="3" Height="2" HorizontalAlignment="Stretch"
                                           VerticalAlignment="Bottom"
                                           Fill="{DynamicResource BlackBrush}" />
                                <ToggleButton Name="ToggleButton" Grid.Column="1"
                                              Background="{TemplateBinding Background}"
                                              Foreground="{TemplateBinding Foreground}"
                                              IsChecked="{Binding Path=IsExpanded,
                                                                  RelativeSource={RelativeSource TemplatedParent}}"
                                              OverridesDefaultStyle="True" Padding="1.5,0"
                                              Style="{StaticResource DropDownButton}" />
                                <ContentPresenter Grid.Column="2" Margin="0,5,5,5" VerticalAlignment="Center" ContentSource="Header"
                                                  ContextMenu="{StaticResource FolderExpanderContextMenu}"
                                                  ContextMenuOpening="ModifyFolderLabelContextMenuOnOpening"
                                                  MouseLeftButtonDown="FilterByFolderOnDoubleClick" />
                            </Grid>
                            <ContentPresenter x:Name="ExpanderContent" DockPanel.Dock="Bottom">
                                <ContentPresenter.LayoutTransform>
                                    <ScaleTransform ScaleY="0" />
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ExpanderContent" Property="Width" Value="Auto" />
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ExpanderContent"
                                                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)" To="1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ExpanderContent"
                                                             Storyboard.TargetProperty="(ContentPresenter.LayoutTransform).(ScaleTransform.ScaleY)" To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="False">
                                <Setter TargetName="ExpanderContent" Property="Width" Value="0" />
                            </Trigger>
                            <Trigger Property="HasSubFolders" Value="False">
                                <Setter TargetName="ToggleButton" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Background" Property="Fill" Value="{DynamicResource HighlightBrush}" />
                            </Trigger>
                            <Trigger Property="DisplayTopBlackBar" Value="False">
                                <Setter TargetName="TopBlackBar" Property="Fill" Value="Transparent" />
                            </Trigger>
                            <Trigger Property="DisplayBottomBlackBar" Value="False">
                                <Setter TargetName="BottomBlackBar" Property="Fill" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--  EndRegion  -->
        <!--  Region Account List View  -->
        <ContextMenu x:Key="CellBackgroundContextMenu">
            <MenuItem Click="CreateNewAccountOnClick" Header="Add" />
            <MenuItem Click="EditAccountOnClick" Header="Edit" />
            <MenuItem Click="DeleteAccountOnClick" Header="Delete" />
        </ContextMenu>
        <Style x:Key="CellBackground" TargetType="Rectangle">
            <Setter Property="Fill" Value="Transparent" />
            <Setter Property="Margin" Value="0,-6,0,-6" />
            <Setter Property="ContextMenu" Value="{StaticResource CellBackgroundContextMenu}" />
            <EventSetter Event="MouseLeftButtonDown" Handler="EditAccountOnDoubleLeftClick" />
        </Style>
        <ContextMenu x:Key="CellTextBlockContextMenu">
            <MenuItem Click="CopyCellOnClick" Header="Copy" />
            <MenuItem Click="CreateNewAccountOnClick" Header="Add" />
            <MenuItem Click="EditAccountOnClick" Header="Edit" />
            <MenuItem Click="DeleteAccountOnClick" Header="Delete" />
        </ContextMenu>
        <Style x:Key="CellTextBlock" TargetType="TextBlock">
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="ContextMenu" Value="{StaticResource CellTextBlockContextMenu}" />
            <EventSetter Event="MouseLeftButtonDown" Handler="CopyCellOnLeftClick" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextDecorations" Value="Underline" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PasswordCellTextBlock" TargetType="customControls:PasswordTextBlock">
            <Setter Property="Text" Value="*******" />
            <Setter Property="Margin" Value="5,0,0,0" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="ContextMenu" Value="{StaticResource CellTextBlockContextMenu}" />
            <EventSetter Event="MouseLeftButtonDown" Handler="CopyCellOnLeftClick" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextDecorations" Value="Underline" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ColumnHeaderContextMenuStyle" TargetType="MenuItem">
            <Setter Property="IsCheckable" Value="True" />
            <Setter Property="IsChecked" Value="True" />
            <Setter Property="StaysOpenOnClick" Value="True" />
            <EventSetter Event="Click" Handler="AdjustColumnVisibilityOnClick" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Grid Name="Grid" Background="{DynamicResource WhiteBrush}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path Name="Checkmark" Width="10.210798" Height="11.148514" Margin="7,0,5,0"
                                  Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" Stretch="Fill"
                                  Stroke="{DynamicResource BlackBrush}"
                                  StrokeMiterLimit="2.75" StrokeThickness="1.04192" />
                            <Label Grid.Column="1" Margin="0,0,5,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                   Content="{TemplateBinding Header}"
                                   Foreground="{DynamicResource BlackBrush}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Grid" Property="Background" Value="{DynamicResource GrayBrush7}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="Checkmark" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ContextMenu x:Key="ColumnHeaderContextMenu">
            <MenuItem Header="Account" Style="{StaticResource ColumnHeaderContextMenuStyle}" />
            <MenuItem Header="Username" Style="{StaticResource ColumnHeaderContextMenuStyle}" />
            <MenuItem Header="Email" Style="{StaticResource ColumnHeaderContextMenuStyle}" />
            <MenuItem Header="Password" Style="{StaticResource ColumnHeaderContextMenuStyle}" />
            <MenuItem Header="URL" Style="{StaticResource ColumnHeaderContextMenuStyle}" />
            <MenuItem Header="Notes" Style="{StaticResource ColumnHeaderContextMenuStyle}" />
        </ContextMenu>
        <Style x:Key="ColumnHeader" TargetType="DataGridColumnHeader">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DataGridColumnHeader">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Grid.Column="0" Grid.ColumnSpan="3"
                                       ContextMenu="{StaticResource ColumnHeaderContextMenu}"
                                       Fill="Transparent" />
                            <TextBlock Grid.Column="0" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                       ContextMenu="{StaticResource ColumnHeaderContextMenu}"
                                       FontSize="{DynamicResource LargerFontSize}"
                                       FontWeight="DemiBold"
                                       Text="{TemplateBinding Content}"
                                       TextTrimming="CharacterEllipsis" />
                            <Path Name="SortArrow" Grid.Column="1" Width="8" Height="6" Margin="0,0,5,0" HorizontalAlignment="Right"
                                  VerticalAlignment="Center" Data="M 0 0 L 1 0 0.5 1"
                                  Fill="{DynamicResource BlackBrush}"
                                  Opacity="0.9" RenderTransformOrigin="0.5,0.4" Stretch="Fill" Visibility="Collapsed" />
                            <Thumb Grid.Column="2" Width="3" HorizontalAlignment="Right"
                                   BorderBrush="{DynamicResource GrayBrush9}"
                                   BorderThickness="2" Cursor="SizeWE" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                <Setter TargetName="SortArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  EndRegion  -->
    </controls:MetroWindow.Resources>
    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Click="OpenSettingsOnClick" Content="Settings" FontSize="12" />
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>
    <Grid Name="WindowGrid" SizeChanged="AdjustRegionSizeLimitsOnWindowSizeCharge">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150" MinWidth="150" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="23" />
            <RowDefinition Height="23" />
            <RowDefinition Height="*" />
            <RowDefinition Height="23" />
        </Grid.RowDefinitions>
        <Menu x:Name="MenuBar" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
              Background="{DynamicResource AccentColorBrush}">
            <MenuItem Header="_File" Style="{StaticResource TopLevelMenu}">
                <MenuItem Click="NewSafeOnClick" Header="_New" InputGestureText="Ctrl+N"
                          Style="{StaticResource SubMenu}" />
                <MenuItem Click="OpenOnClick" Header="_Open" InputGestureText="Ctrl+O"
                          Style="{StaticResource SubMenu}" />
                <Separator />
                <MenuItem Click="SaveOnClick" Header="_Save" InputGestureText="Ctrl+S"
                          Style="{StaticResource SubMenu}" />
                <MenuItem Click="SaveAsOnClick" Header="Save _As" InputGestureText="Shift+Ctrl+S"
                          Style="{StaticResource SubMenu}" />
                <Separator />
                <MenuItem Click="LockOnClick" Header="_Lock" InputGestureText="Ctrl+L"
                          Style="{StaticResource SubMenu}" />
                <MenuItem Click="ExitOnClick" Header="_Exit" InputGestureText="Ctrl+X"
                          Style="{StaticResource SubMenu}" />
            </MenuItem>
            <MenuItem Header="_Edit" Style="{StaticResource TopLevelMenu}">
                <MenuItem Click="CreateNewFolderOnClick" Header="New _Folder" InputGestureText="Ctrl+F"
                          Style="{StaticResource SubMenu}" />
                <Separator />
                <MenuItem Click="CreateNewAccountOnClick" Header="_New Account" InputGestureText="Ctrl+Y"
                          Style="{StaticResource SubMenu}" />
                <MenuItem Click="EditAccountOnClick" Header="_Edit Account" InputGestureText="Ctrl+E"
                          Style="{StaticResource SubMenu}" />
                <MenuItem Click="DeleteAccountOnClick" Header="_Delete Account" InputGestureText="Ctrl+D"
                          Style="{StaticResource SubMenu}" />
            </MenuItem>
        </Menu>
        <Grid Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
              Background="{DynamicResource AccentColorBrush}" />
        <ScrollViewer Grid.Row="2" Grid.Column="0" HorizontalAlignment="Stretch" HorizontalScrollBarVisibility="Auto"
                      VerticalScrollBarVisibility="Auto">
            <StackPanel x:Name="Folders" Width="Auto"
                        MinWidth="{Binding ViewportWidth,
                                           ElementName=ScrollViewer,
                                           Mode=OneWay}"
                        AllowDrop="True"
                        Background="{DynamicResource AccentColorBrush}"
                        Drop="DropOntoFolderArea" SnapsToDevicePixels="True" />
        </ScrollViewer>
        <GridSplitter Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch"
                      Background="{DynamicResource GrayBrush7}" />
        <Grid Grid.Row="2" Grid.Column="2"
              Background="{DynamicResource GrayBrush9}">
            <DataGrid Name="AccountList" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False"
                      CanUserReorderColumns="False" CanUserResizeRows="False" ColumnWidth="*" IsReadOnly="True"
                      MouseMove="StartDraggingofAccount">
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Click="CreateNewAccountOnClick" Header="Add" />
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </DataGrid>
        </Grid>
        <Border Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"
                BorderBrush="{DynamicResource GrayBrush7}"
                BorderThickness="0,1,0,0">
            <Grid>
                <Label Name="MessageBox" />
            </Grid>
        </Border>
    </Grid>
</controls:MetroWindow>